name: ncurses

on:
  workflow_run:
    # Let's build ncurses version in parallel with MSVC, because why not.
    workflows: ["mingw"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_DIR_NCURSES: build-ncurses

#
# Since Windows build with ncurses (at least on MSYS2) looks like shit,
# we won't be uploading it on release page.
# So just check that everything builds without compilation errors.
#
jobs:
  build-ncurses:
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    defaults:
      run:
        shell: msys2 {0}

    steps:

    - name: CHECKOUT
      uses: actions/checkout@v3

    # --------------------------------------------------------------------------

    - name: SET UP MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: |
                 git
                 mingw-w64-ucrt-x86_64-gcc
                 mingw-w64-ucrt-x86_64-cmake
                 mingw-w64-ucrt-x86_64-ninja
                 mingw-w64-ucrt-x86_64-ncurses

    # --------------------------------------------------------------------------

    - name: DEBUG LOGS
      if: false
      run: |
            echo "--- ls /ucrt64/include/ncurses/ ---"
            ls /ucrt64/include/ncurses/
            echo "--- ls /ucrt64/lib/libnc* ---"
            ls /ucrt64/lib/libnc*
            echo "--- cat /ucrt64/include/ncurses/ncurses.h ---"
            cat /ucrt64/include/ncurses/ncurses.h | grep "KEY_"

    # --------------------------------------------------------------------------

    #
    # It looks like (at least for this build environment)
    # 'find_package(Curses)' sets wrong header location for the library
    # ("/ucrt64/include" instead of "/ucrt64/include/ncurses"), as well as
    # the wrong file of the library itself ("/ucrt64/lib/libncurses.a"
    # instead of "/ucrt64/lib/libncursesw.dll.a") so we need to manually
    # specify them.
    # You can find the exact locations of msys package's installed files in
    # msys package registry. For ncurses it's here:
    #
    # https://packages.msys2.org/packages/mingw-w64-ucrt-x86_64-ncurses
    #
    - name: CONFIGURE CMake
      run: >
          cmake
          -B '${{github.workspace}}/${{ env.BUILD_DIR_NCURSES }}'
          -DBUILD_VERSION_TEXT=${{ env.BUILD_VERSION_TEXT }}
          -G Ninja
          -DCMAKE_BUILD_TYPE=Release
          -DBUILD_TESTS=OFF
          -DCURSES_INCLUDE_PATH='/ucrt64/include/ncurses'
          -DCURSES_LIBRARY='/ucrt64/lib/libncursesw.dll.a'

    # --------------------------------------------------------------------------

    - name: BUILD
      run: >
           cmake --build '${{github.workspace}}/${{ env.BUILD_DIR_NCURSES }}'
           --config Release

